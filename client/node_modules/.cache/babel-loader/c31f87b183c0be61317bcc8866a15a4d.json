{"ast":null,"code":"var _jsxFileName = \"/Users/sema/UNote/client/src/components/AddAudioRec.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport MicRecorder from 'mic-recorder-to-mp3';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddAudioRec(props) {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [isRecording, setIsRecording] = useState(false);\n  const [blobURL, setBlobUrl] = useState('http://localhost:5005/bloburl');\n  const [isBlocked, setIsBlocked] = useState(false);\n  const [Mp3Recorder, setMp3Recorder] = useState(new MicRecorder({\n    bitRate: 128\n  }));\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios.post('/api/audios', {\n      title,\n      blobURL,\n      tags: selectedTags\n    }).then(response => {\n      setTitle(''); // WHAT TO  DO FOR BLOB\n\n      setSelectedTags([]);\n      props.getAllAudios();\n    }).catch(err => console.log(err));\n  };\n\n  let start = () => {\n    if (isBlocked) {\n      console.log('Permission Denied');\n    } else {\n      Mp3Recorder.start().then(() => {\n        setIsRecording(true); //console.log(isRecording);\n      }).catch(e => console.error(e));\n    }\n  }; // E: this will send the mp3 blob to the backend!\n\n\n  let upload = (blob, axios) => {\n    var xhr = new XMLHttpRequest();\n    var filename = new Date().toLocaleString(); // S:before toISOString()\n\n    xhr.onload = function (e) {\n      if (this.readyState === 4) {\n        console.log(\"Server returned: \", e.target.responseText);\n      }\n    };\n\n    var fd = new FormData();\n    fd.append(\"fname\", filename);\n    fd.append(\"data\", blob);\n    console.log(process.env.NODE_ENV);\n    xhr.open(\"POST\", \"http://localhost:5005/bloburl\", true);\n    xhr.responseType = 'arraybuffer/blob';\n    xhr.send(fd);\n  };\n\n  let stop = () => {\n    Mp3Recorder.stop().getMp3().then(_ref => {\n      let [buffer, blob] = _ref;\n      const blobURLBackEnd = \"http://localhost:5005/bloburl\";\n      setBlobUrl(blobURLBackEnd); // E: the backend will change the file to stream from the database\n\n      upload(blob, axios); // setBlobUrl(false);\n\n      setIsRecording(false);\n      setIsBlocked(false);\n    }).catch(e => console.error(e));\n  };\n\n  let updateSelectedTags = event => {\n    let options = event.target.options;\n    let arr = [];\n\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].selected) {\n        arr.push(options[i].value);\n      }\n    }\n\n    setSelectedTags(arr);\n    console.log(selectedTags);\n  };\n\n  const tags = [\"daily\", \"podcast\", \"restaurant\", \"bar\", \"spending\", \"earning\", \"job-search\", \"coding\", \"film\", \"series\", \"music\", \"concert\", \"to-do\", \"period-tracking\", \"birthday\", \"networking\", \"mood-tracking\", \"appointment\", \"for-tomorrow\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Audios\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Save an audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Record an audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: start,\n        disabled: isRecording,\n        children: \"Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stop,\n        disabled: !isRecording,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: blobURL,\n        controls: \"controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"tags\",\n        multiple: true,\n        value: selectedTags,\n        onChange: event => updateSelectedTags(event),\n        children: tags === null || tags === void 0 ? void 0 : tags.map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: tag,\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save this audio \\u2795\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddAudioRec, \"dmcSemAGbxgzWWqlk/EJzY4TKtQ=\");\n\n_c = AddAudioRec;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAudioRec\");","map":{"version":3,"names":["useState","MicRecorder","axios","AddAudioRec","props","title","setTitle","selectedTags","setSelectedTags","isRecording","setIsRecording","blobURL","setBlobUrl","isBlocked","setIsBlocked","Mp3Recorder","setMp3Recorder","bitRate","handleSubmit","event","preventDefault","post","tags","then","response","getAllAudios","catch","err","console","log","start","e","error","upload","blob","xhr","XMLHttpRequest","filename","Date","toLocaleString","onload","readyState","target","responseText","fd","FormData","append","process","env","NODE_ENV","open","responseType","send","stop","getMp3","buffer","blobURLBackEnd","updateSelectedTags","options","arr","i","length","selected","push","value","map","tag"],"sources":["/Users/sema/UNote/client/src/components/AddAudioRec.js"],"sourcesContent":["import { useState } from \"react\"\nimport MicRecorder from 'mic-recorder-to-mp3';\nimport axios from \"axios\";\n\nexport default function AddAudioRec(props) {\n\n    const [title, setTitle] = useState('')\n    const [selectedTags, setSelectedTags] = useState([])\n    const [isRecording, setIsRecording] = useState(false);\n    const [blobURL, setBlobUrl] = useState('http://localhost:5005/bloburl');\n    const [isBlocked, setIsBlocked] = useState(false);\n    const [Mp3Recorder, setMp3Recorder] = useState(new MicRecorder({ bitRate: 128 }));\n\n    const handleSubmit = event => {\n        event.preventDefault()\n        axios.post('/api/audios', { title, blobURL, tags: selectedTags })\n            .then(response => {\n                setTitle('')\n// WHAT TO  DO FOR BLOB\n                setSelectedTags([])\n                props.getAllAudios()\n            })\n            .catch(err => console.log(err))\n    }\n\n    let start = () => {\n        if (isBlocked) {\n            console.log('Permission Denied');\n        } else {\n            Mp3Recorder\n                .start()\n                .then(() => {\n                    setIsRecording(true);\n                    //console.log(isRecording);\n                }).catch((e) => console.error(e));\n        }\n    };\n\n    // E: this will send the mp3 blob to the backend!\n    let upload = (blob, axios) => {\n        var xhr = new XMLHttpRequest();\n        var filename = new Date().toLocaleString(); // S:before toISOString()\n        xhr.onload = function (e) {\n            if (this.readyState === 4) {\n                console.log(\"Server returned: \", e.target.responseText);\n            }\n        }\n\n        var fd = new FormData();\n        fd.append(\"fname\", filename);\n        fd.append(\"data\", blob);\n        console.log(process.env.NODE_ENV)\n        xhr.open(\"POST\", \"http://localhost:5005/bloburl\", true);\n        xhr.responseType = 'arraybuffer/blob';\n        xhr.send(fd);\n    }\n\n    let stop = () => {\n        Mp3Recorder\n            .stop()\n            .getMp3()\n            .then(([buffer, blob]) => {\n                const blobURLBackEnd = \"http://localhost:5005/bloburl\"\n                setBlobUrl(blobURLBackEnd); // E: the backend will change the file to stream from the database\n                upload(blob, axios);\n\n                // setBlobUrl(false);\n                setIsRecording(false);\n                setIsBlocked(false);\n            }).catch((e) => console.error(e));\n    }\n\n\n    let updateSelectedTags = (event) => {\n        let options = event.target.options;\n        let arr = []\n        for (let i = 0; i < options.length; i++) {\n            if (options[i].selected) {\n                arr.push(options[i].value)\n            }\n        }\n        setSelectedTags(arr)\n        console.log(selectedTags)\n    }\n\n    const tags = [\"daily\", \"podcast\", \"restaurant\", \"bar\", \"spending\",\n        \"earning\", \"job-search\", \"coding\", \"film\", \"series\", \"music\", \"concert\",\n        \"to-do\", \"period-tracking\", \"birthday\", \"networking\", \"mood-tracking\",\n        \"appointment\", \"for-tomorrow\"]\n\n\n    return (\n        <div className=\"Audios\">\n            <h1>Save an audio</h1>\n            <form onSubmit={handleSubmit}>\n                <h2>Title</h2>\n                <input\n                    type=\"text\"\n                    value={title}\n                    onChange={event => setTitle(event.target.value)}\n                />\n\n                <h2>Record an audio</h2>\n                <button onClick={start} disabled={isRecording}>Record</button>\n                <button onClick={stop} disabled={!isRecording}>Stop</button> \n                <audio src={blobURL} controls=\"controls\" />\n\n                <h2>Tags</h2>\n\n                <select name=\"tags\" multiple value={selectedTags}\n                    onChange={event => updateSelectedTags(event)}>\n                    {tags?.map((tag) => <option key={tag} value={tag}>{tag}</option>)}\n\n                </select>\n                <button type=\"submit\">Save this audio ➕</button>\n            </form>\n\n        </div>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}