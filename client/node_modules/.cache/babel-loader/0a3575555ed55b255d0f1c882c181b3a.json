{"ast":null,"code":"var _jsxFileName = \"/Users/sema/UNote/client/src/components/AddAudioRec.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport MicRecorder from 'mic-recorder-to-mp3';\nimport blobUrlFromId from './helpers/blobUrlFromId';\nimport audiosUrl from './helpers/audiosUrl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddAudioRec(props) {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [isRecording, setIsRecording] = useState(false);\n  const [blobURL, setBlobUrl] = useState('');\n  const [isBlocked, setIsBlocked] = useState(false);\n  const [Mp3Recorder, setMp3Recorder] = useState(new MicRecorder({\n    bitRate: 128\n  }));\n  const [latestBlobID, setLatestBlobID] = useState('');\n  useEffect(() => {\n    console.log('latestBlobID=' + latestBlobID);\n    const blobURLBackEnd = `${packageJson.proxy}/api/bloburl/${latestBlobID}`;\n    setBlobUrl(blobURLBackEnd); // E: the backend will change the file to stream from the database\n\n    console.log('bloburl=' + blobURL);\n  }, [latestBlobID, blobURL]);\n  console.log(packageJson.proxy);\n\n  const handleSubmit = event => {\n    event.preventDefault(); //         const storedToken = localStorage.getItem('authToken')\n    //         axios.post('/api/audios', { title, blobURL, tags: selectedTags }, { headers: { Authorization: `Bearer ${storedToken}` } })\n    //             .then(response => {\n    //                 setTitle('')\n    // // WHAT TO  DO FOR BLOB\n    //                 setSelectedTags([])\n    //                 props.getAllAudios()\n    //             })\n    //             .catch(err => console.log(err))\n  };\n\n  let start = () => {\n    if (isBlocked) {\n      console.log('Permission Denied');\n    } else {\n      Mp3Recorder.start().then(() => {\n        setIsRecording(true);\n      }).catch(e => console.error(e));\n    }\n  }; // E: this will send the mp3 blob to the backend!\n\n\n  let upload = blob => {\n    var xhr = new XMLHttpRequest();\n\n    xhr.onload = function (e) {\n      if (this.readyState === 4) {\n        const resp = JSON.parse(e.target.responseText);\n        console.log(resp);\n        setLatestBlobID(resp._id);\n        console.log('latestBlobID=' + latestBlobID);\n      }\n    };\n\n    var fd = new FormData();\n    fd.append(\"data\", blob);\n    fd.append(\"title\", title);\n    fd.append(\"tags\", selectedTags);\n    const url = `${packageJson.proxy}/api/audios`;\n    console.log(url);\n    xhr.open(\"POST\", process.env.REACT_APP_POST_AUDIO_FILE, true);\n    const storedToken = localStorage.getItem('authToken');\n    xhr.setRequestHeader('Authorization', 'Bearer ' + storedToken); // xhr.withCredentials = true; \n    // xhr.responseType = 'arraybuffer';\n    // xhr.setRequestHeader('Content-type','application/x-www-form-urlencoded');\n\n    xhr.send(fd);\n    setTitle(''); // WHAT TO  DO FOR BLOB\n\n    setSelectedTags([]);\n    props.getAllAudios();\n  };\n\n  let stop = () => {\n    Mp3Recorder.stop().getMp3().then(_ref => {\n      let [buffer, blob] = _ref;\n      upload(blob);\n      setIsRecording(false);\n      setIsBlocked(false);\n      console.log('blobURL' + blobURL);\n    }).catch(e => console.error(e));\n  };\n\n  let streamWithAuth = () => {\n    console.log(\" Attempt to stream from\");\n    console.log(blobURL); // create context\n\n    let audioCtx = new (window.AudioContext || window.webkitAudioContext)(); // create source\n\n    let source = audioCtx.createBufferSource(); // route source\n\n    source.connect(audioCtx.destination); // prepare request\n\n    let request = new XMLHttpRequest();\n    request.open('GET', blobURL, true\n    /* async */\n    );\n    request.responseType = 'arraybuffer';\n\n    request.onload = function () {\n      // on load callback\n      // get audio data\n      let audioData = request.response; // try to decode audio data\n\n      audioCtx.decodeAudioData(audioData, function (buffer) {\n        // on success callback\n        console.log(\"Successfully decoded\"); // set source\n\n        source.buffer = buffer; // .. do whatever you want with the source\n        // e.g. play it\n\n        source.start(0); // or stop\n        // source.stop();\n      }, function (e) {\n        // on error callback\n        console.log(\"An error occurred\");\n        console.log(e);\n      });\n    };\n\n    const authenticationToken = localStorage.getItem('authToken');\n    request.setRequestHeader(\"Authorization\", `Bearer ${authenticationToken}`);\n    request.send();\n  };\n\n  let updateSelectedTags = event => {\n    let options = event.target.options;\n    let arr = [];\n\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].selected) {\n        arr.push(options[i].value);\n      }\n    }\n\n    setSelectedTags(arr);\n    console.log(selectedTags);\n  };\n\n  const tags = [\"daily\", \"podcast\", \"restaurant\", \"bar\", \"spending\", \"earning\", \"job-search\", \"coding\", \"film\", \"series\", \"music\", \"concert\", \"to-do\", \"period-tracking\", \"birthday\", \"networking\", \"mood-tracking\", \"appointment\", \"for-tomorrow\", \"grocery\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Audios\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Save an audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Record an audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: start,\n        disabled: isRecording,\n        children: \"Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stop,\n        disabled: !isRecording,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: streamWithAuth,\n        disabled: blobURL === \"\",\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"tags\",\n        multiple: true,\n        value: selectedTags,\n        onChange: event => updateSelectedTags(event),\n        children: tags === null || tags === void 0 ? void 0 : tags.map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: tag,\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save this audio \\u2795\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddAudioRec, \"FPRAAWHGx7R3sSH0XpczgGah3v0=\");\n\n_c = AddAudioRec;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAudioRec\");","map":{"version":3,"names":["useState","useEffect","MicRecorder","blobUrlFromId","audiosUrl","AddAudioRec","props","title","setTitle","selectedTags","setSelectedTags","isRecording","setIsRecording","blobURL","setBlobUrl","isBlocked","setIsBlocked","Mp3Recorder","setMp3Recorder","bitRate","latestBlobID","setLatestBlobID","console","log","blobURLBackEnd","packageJson","proxy","handleSubmit","event","preventDefault","start","then","catch","e","error","upload","blob","xhr","XMLHttpRequest","onload","readyState","resp","JSON","parse","target","responseText","_id","fd","FormData","append","url","open","process","env","REACT_APP_POST_AUDIO_FILE","storedToken","localStorage","getItem","setRequestHeader","send","getAllAudios","stop","getMp3","buffer","streamWithAuth","audioCtx","window","AudioContext","webkitAudioContext","source","createBufferSource","connect","destination","request","responseType","audioData","response","decodeAudioData","authenticationToken","updateSelectedTags","options","arr","i","length","selected","push","value","tags","map","tag"],"sources":["/Users/sema/UNote/client/src/components/AddAudioRec.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport MicRecorder from 'mic-recorder-to-mp3'\nimport blobUrlFromId from './helpers/blobUrlFromId';\nimport audiosUrl from './helpers/audiosUrl'\n\nexport default function AddAudioRec(props) {\n\n    const [title, setTitle] = useState('')\n    const [selectedTags, setSelectedTags] = useState([])\n    const [isRecording, setIsRecording] = useState(false);\n    const [blobURL, setBlobUrl] = useState('');\n    const [isBlocked, setIsBlocked] = useState(false);\n    const [Mp3Recorder, setMp3Recorder] = useState(new MicRecorder({ bitRate: 128 }));\n    const [latestBlobID, setLatestBlobID] = useState('')\n\n\n    useEffect(() => {\n\n        console.log('latestBlobID=' + latestBlobID);\n        const blobURLBackEnd = `${packageJson.proxy}/api/bloburl/${latestBlobID}`;\n        setBlobUrl(blobURLBackEnd); // E: the backend will change the file to stream from the database\n        console.log('bloburl=' + blobURL);\n    }, [latestBlobID, blobURL])\n    console.log(packageJson.proxy)\n\n    const handleSubmit = event => {\n        event.preventDefault()\n        //         const storedToken = localStorage.getItem('authToken')\n        //         axios.post('/api/audios', { title, blobURL, tags: selectedTags }, { headers: { Authorization: `Bearer ${storedToken}` } })\n        //             .then(response => {\n        //                 setTitle('')\n        // // WHAT TO  DO FOR BLOB\n        //                 setSelectedTags([])\n        //                 props.getAllAudios()\n        //             })\n        //             .catch(err => console.log(err))\n    }\n\n    let start = () => {\n        if (isBlocked) {\n            console.log('Permission Denied');\n        } else {\n            Mp3Recorder\n                .start()\n                .then(() => {\n                    setIsRecording(true);\n                }).catch((e) => console.error(e));\n        }\n    };\n\n    // E: this will send the mp3 blob to the backend!\n    let upload = (blob) => {\n        var xhr = new XMLHttpRequest();\n        xhr.onload = function (e) {\n            if (this.readyState === 4) {\n                const resp = JSON.parse(e.target.responseText)\n                console.log(resp);\n                setLatestBlobID(resp._id);\n                console.log('latestBlobID=' + latestBlobID);\n            }\n        }\n\n        var fd = new FormData();\n        fd.append(\"data\", blob);\n        fd.append(\"title\", title);\n        fd.append(\"tags\", selectedTags);\n\n        const url = `${packageJson.proxy}/api/audios`;\n        console.log(url);\n        xhr.open(\"POST\", process.env.REACT_APP_POST_AUDIO_FILE, true);\n        const storedToken = localStorage.getItem('authToken')\n        xhr.setRequestHeader('Authorization', 'Bearer ' + storedToken);\n\n        // xhr.withCredentials = true; \n        // xhr.responseType = 'arraybuffer';\n        // xhr.setRequestHeader('Content-type','application/x-www-form-urlencoded');\n        xhr.send(fd);\n        setTitle('');\n        // WHAT TO  DO FOR BLOB\n        setSelectedTags([]);\n        props.getAllAudios();\n    }\n\n    let stop = () => {\n        Mp3Recorder\n            .stop()\n            .getMp3()\n            .then(([buffer, blob]) => {\n                upload(blob);\n                setIsRecording(false);\n                setIsBlocked(false);\n\n                console.log('blobURL' + blobURL);\n            }).catch((e) => console.error(e));\n    }\n\n    let streamWithAuth = () => {\n\n        console.log(\" Attempt to stream from\");\n        console.log(blobURL);\n\n        // create context\n        let audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n\n        // create source\n        let source = audioCtx.createBufferSource();\n\n        // route source\n        source.connect(audioCtx.destination);\n\n        // prepare request\n        let request = new XMLHttpRequest();\n        request.open('GET', blobURL, true /* async */);\n        request.responseType = 'arraybuffer';\n\n        request.onload = function () {\n            // on load callback\n\n            // get audio data\n            let audioData = request.response;\n\n            // try to decode audio data\n            audioCtx.decodeAudioData(audioData,\n                function (buffer) {\n                    // on success callback\n                    console.log(\"Successfully decoded\");\n\n                    // set source\n                    source.buffer = buffer;\n\n                    // .. do whatever you want with the source\n                    // e.g. play it\n                    source.start(0);\n                    // or stop\n                    // source.stop();\n                },\n                function (e) {\n                    // on error callback\n                    console.log(\"An error occurred\");\n                    console.log(e);\n                });\n        };\n        const authenticationToken = localStorage.getItem('authToken')\n        request.setRequestHeader(\"Authorization\", `Bearer ${authenticationToken}`);\n        request.send();\n    }\n\n\n    let updateSelectedTags = (event) => {\n        let options = event.target.options;\n        let arr = []\n        for (let i = 0; i < options.length; i++) {\n            if (options[i].selected) {\n                arr.push(options[i].value)\n            }\n        }\n        setSelectedTags(arr)\n        console.log(selectedTags)\n    }\n\n    const tags = [\"daily\", \"podcast\", \"restaurant\", \"bar\", \"spending\",\n        \"earning\", \"job-search\", \"coding\", \"film\", \"series\", \"music\", \"concert\",\n        \"to-do\", \"period-tracking\", \"birthday\", \"networking\", \"mood-tracking\",\n        \"appointment\", \"for-tomorrow\", \"grocery\"]\n\n\n    return (\n        <div className=\"Audios\">\n            <h1>Save an audio</h1>\n            <form onSubmit={handleSubmit}>\n                <h2>Title</h2>\n                <input\n                    type=\"text\"\n                    value={title}\n                    onChange={event => setTitle(event.target.value)}\n                />\n\n                <h2>Record an audio</h2>\n                <button onClick={start} disabled={isRecording}>Record</button>\n                <button onClick={stop} disabled={!isRecording}>Post</button>\n                <button onClick={streamWithAuth} disabled={blobURL === \"\"}>Play</button>\n                {/* <audio src={streamWithAuth(blobURL)} controls=\"controls\" /> */}\n\n                <h2>Tags</h2>\n\n                <select name=\"tags\" multiple value={selectedTags}\n                    onChange={event => updateSelectedTags(event)}>\n                    {tags?.map((tag) => <option key={tag} value={tag}>{tag}</option>)}\n\n                </select>\n                <button type=\"submit\">Save this audio ➕</button>\n            </form>\n\n        </div>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}