{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddEvent(props) {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [hours, setHours] = useState('');\n  const [minutes, setMinutes] = useState('');\n  const [startDate, setStartDate] = useState(setHours(setMinutes(new Date(), 30), 16));\n  const [place, setPlace] = useState('');\n  const [details, setDetails] = useState('');\n  const [selectedTags, setSelectedTags] = useState([]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios.post('/api/events', {\n      title,\n      startDate,\n      place,\n      details,\n      tags: selectedTags\n    }).then(response => {\n      setTitle('');\n      setStartDate('');\n      setPlace('');\n      setDetails('');\n      setSelectedTags([]);\n      props.getAllEvents();\n    }).catch(err => console.log(err));\n  };\n\n  let updateSelectedTags = event => {\n    let options = event.target.options;\n    let arr = [];\n\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].selected) {\n        arr.push(options[i].value);\n      }\n    }\n\n    setSelectedTags(arr);\n    console.log(selectedTags);\n  };\n\n  const tags = [\"daily\", \"podcast\", \"restaurant\", \"bar\", \"spending\", \"earning\", \"job-search\", \"coding\", \"film\", \"series\", \"music\", \"concert\", \"to-do\", \"period-tracking\", \"birthday\", \"networking\", \"mood-tracking\", \"appointment\", \"for-tomorrow\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(AddEvent, \"IYkrGdwX2LE7Dz6Nck3dE7EyrzI=\");\n\n_c = AddEvent;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEvent\");","map":{"version":3,"names":["React","useState","axios","DatePicker","AddEvent","props","title","setTitle","hours","setHours","minutes","setMinutes","startDate","setStartDate","Date","place","setPlace","details","setDetails","selectedTags","setSelectedTags","handleSubmit","event","preventDefault","post","tags","then","response","getAllEvents","catch","err","console","log","updateSelectedTags","options","target","arr","i","length","selected","push","value"],"sources":["/Users/sema/UNote/client/src/components/AddEvent.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport axios from \"axios\"\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function AddEvent(props) {\n\n    const [title, setTitle] = useState('')\n    const [hours, setHours] = useState('')\n    const [minutes, setMinutes] = useState('')\n    const [startDate, setStartDate] = useState(setHours(setMinutes(new Date(), 30), 16));\n    const [place, setPlace] = useState('')\n    const [details, setDetails] = useState('')\n    const [selectedTags, setSelectedTags] = useState([])\n\n    const handleSubmit = event => {\n        event.preventDefault()\n        axios.post('/api/events', { title, startDate, place, details, tags: selectedTags })\n            .then(response => {\n                setTitle('')\n                setStartDate('')\n                setPlace('')\n                setDetails('')\n                setSelectedTags([])\n                props.getAllEvents()\n            })\n            .catch(err => console.log(err))\n    }\n\n    let updateSelectedTags = (event) => {\n        let options = event.target.options;\n        let arr = []\n        for (let i = 0; i < options.length; i++) {\n            if (options[i].selected) {\n                arr.push(options[i].value)\n            }\n        }\n        setSelectedTags(arr)\n        console.log(selectedTags)\n    }\n\n    const tags = [\"daily\", \"podcast\", \"restaurant\", \"bar\", \"spending\",\n        \"earning\", \"job-search\", \"coding\", \"film\", \"series\", \"music\", \"concert\",\n        \"to-do\", \"period-tracking\", \"birthday\", \"networking\", \"mood-tracking\",\n        \"appointment\", \"for-tomorrow\"]\n\n\n    return (\n        <>\n            {/* <h1>Add an Event</h1>\n            <form onSubmit={ handleSubmit }>\n                <h2>Title</h2>\n                <input\n                    type=\"text\"\n                    value={title}\n                    onChange={event => setTitle(event.target.value)}\n                />\n\n                <h2>Date</h2>\n                <DatePicker\n                    selected={ startDate }\n                    onChange={(date) => setStartDate(date)}\n                    showTimeSelect\n                    timeFormat=\"HH:mm\"\n                    injectTimes={[\n                        setHours(setMinutes(new Date(), 1), 0),\n                        setHours(setMinutes(new Date(), 5), 12),\n                        setHours(setMinutes(new Date(), 59), 23),\n                    ]}\n                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                />\n\n                <h2>Place</h2>\n                <input\n                    type=\"text\"\n                    value={ place }\n                    onChange={event => setPlace(event.target.value)}\n                />\n\n                <h2>Details</h2>\n                <input\n                    type=\"text\"\n                    value={ details }\n                    onChange={event => setDetails(event.target.value)}\n                />\n\n                <h2>Tags</h2>\n\n                <select name=\"tags\" multiple value={ selectedTags }\n                    onChange={event => updateSelectedTags(event)}>\n                    {tags?.map((tag) => <option key={tag} value={tag}>{tag}</option>)}\n\n                </select>\n                <button type=\"submit\">Save this eventâž•</button>\n            </form> */}\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EAEpC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAACQ,QAAQ,CAACE,UAAU,CAAC,IAAIG,IAAJ,EAAD,EAAa,EAAb,CAAX,EAA6B,EAA7B,CAAT,CAA1C;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,EAAD,CAAhD;;EAEA,MAAMoB,YAAY,GAAGC,KAAK,IAAI;IAC1BA,KAAK,CAACC,cAAN;IACArB,KAAK,CAACsB,IAAN,CAAW,aAAX,EAA0B;MAAElB,KAAF;MAASM,SAAT;MAAoBG,KAApB;MAA2BE,OAA3B;MAAoCQ,IAAI,EAAEN;IAA1C,CAA1B,EACKO,IADL,CACUC,QAAQ,IAAI;MACdpB,QAAQ,CAAC,EAAD,CAAR;MACAM,YAAY,CAAC,EAAD,CAAZ;MACAG,QAAQ,CAAC,EAAD,CAAR;MACAE,UAAU,CAAC,EAAD,CAAV;MACAE,eAAe,CAAC,EAAD,CAAf;MACAf,KAAK,CAACuB,YAAN;IACH,CARL,EASKC,KATL,CASWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATlB;EAUH,CAZD;;EAcA,IAAIG,kBAAkB,GAAIX,KAAD,IAAW;IAChC,IAAIY,OAAO,GAAGZ,KAAK,CAACa,MAAN,CAAaD,OAA3B;IACA,IAAIE,GAAG,GAAG,EAAV;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;MACrC,IAAIH,OAAO,CAACG,CAAD,CAAP,CAAWE,QAAf,EAAyB;QACrBH,GAAG,CAACI,IAAJ,CAASN,OAAO,CAACG,CAAD,CAAP,CAAWI,KAApB;MACH;IACJ;;IACDrB,eAAe,CAACgB,GAAD,CAAf;IACAL,OAAO,CAACC,GAAR,CAAYb,YAAZ;EACH,CAVD;;EAYA,MAAMM,IAAI,GAAG,CAAC,OAAD,EAAU,SAAV,EAAqB,YAArB,EAAmC,KAAnC,EAA0C,UAA1C,EACT,SADS,EACE,YADF,EACgB,QADhB,EAC0B,MAD1B,EACkC,QADlC,EAC4C,OAD5C,EACqD,SADrD,EAET,OAFS,EAEA,iBAFA,EAEmB,UAFnB,EAE+B,YAF/B,EAE6C,eAF7C,EAGT,aAHS,EAGM,cAHN,CAAb;EAMA,oBACI,qCADJ;AAkDH;;GA5FuBrB,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}