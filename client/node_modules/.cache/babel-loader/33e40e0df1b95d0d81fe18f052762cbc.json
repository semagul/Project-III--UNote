{"ast":null,"code":"var _jsxFileName = \"/Users/sema/UNote/client/src/components/AddAudioRec.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport MicRecorder from 'mic-recorder-to-mp3';\nimport blobUrlFromId from './helpers/blobUrlFromId';\nimport audiosUrl from './helpers/audiosUrl';\nimport Tags from \"./Tags\"; // there is no Axios.\n// Instead the audio notes are posted by XMLHttpRequest\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddAudioRec(props) {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [tags, setTags] = useState([]);\n  const [isRecording, setIsRecording] = useState(false);\n  const [blobURL, setBlobUrl] = useState('');\n  const [isBlocked, setIsBlocked] = useState(false);\n  const [Mp3Recorder, setMp3Recorder] = useState(new MicRecorder({\n    bitRate: 128\n  }));\n  const [latestBlobID, setLatestBlobID] = useState('');\n  useEffect(() => {\n    const blobURLBackEnd = blobUrlFromId(latestBlobID);\n    setBlobUrl(blobURLBackEnd); //the backend will change the file to stream from the database\n  }, [latestBlobID, blobURL]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  let start = () => {\n    if (isBlocked) {\n      console.log('Permission Denied');\n    } else {\n      Mp3Recorder.start().then(() => {\n        setIsRecording(true);\n      }).catch(e => console.error(e));\n    }\n  }; // this will send the mp3 blob to the backend using:\n  // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n  // https://developer.mozilla.org/en-US/docs/Web/API/FormData/Using_FormData_Objects\n\n\n  let upload = blob => {\n    var xhr = new XMLHttpRequest();\n\n    xhr.onload = e => {\n      // todo to arrow func\n      if (this.readyState === 4) {\n        const resp = JSON.parse(e.target.responseText);\n        setLatestBlobID(resp._id);\n        setTitle('');\n        setSelectedTags([]);\n        props.getAllAudios();\n      }\n    };\n\n    var fd = new FormData();\n    fd.append(\"data\", blob);\n    fd.append(\"title\", title);\n    fd.append(\"tags\", selectedTags);\n    xhr.open(\"POST\", audiosUrl(), true);\n    const storedToken = localStorage.getItem('authToken');\n    xhr.setRequestHeader('Authorization', 'Bearer ' + storedToken);\n    xhr.send(fd);\n  };\n\n  let stop = shouldPostNote => {\n    Mp3Recorder.stop().getMp3().then(_ref => {\n      let [buffer, blob] = _ref;\n\n      if (shouldPostNote) {\n        upload(blob);\n      } else {\n        console.log(\"Discarding note\");\n      }\n\n      setIsRecording(false);\n      setIsBlocked(false);\n      console.log('blobURL' + blobURL);\n    }).catch(e => console.error(e));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Audios\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Save an audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Record an audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: start,\n        disabled: isRecording,\n        children: \"Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => stop(true),\n        disabled: !isRecording,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => stop(false),\n        disabled: !isRecording,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tags, {\n        tags: tags,\n        setTags: setTags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save this audio \\u2795\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddAudioRec, \"+KkMvwAyEhJn7VkNpFmt4CLgG5w=\");\n\n_c = AddAudioRec;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAudioRec\");","map":{"version":3,"names":["useState","useEffect","MicRecorder","blobUrlFromId","audiosUrl","Tags","AddAudioRec","props","title","setTitle","tags","setTags","isRecording","setIsRecording","blobURL","setBlobUrl","isBlocked","setIsBlocked","Mp3Recorder","setMp3Recorder","bitRate","latestBlobID","setLatestBlobID","blobURLBackEnd","handleSubmit","event","preventDefault","start","console","log","then","catch","e","error","upload","blob","xhr","XMLHttpRequest","onload","readyState","resp","JSON","parse","target","responseText","_id","setSelectedTags","getAllAudios","fd","FormData","append","selectedTags","open","storedToken","localStorage","getItem","setRequestHeader","send","stop","shouldPostNote","getMp3","buffer","value"],"sources":["/Users/sema/UNote/client/src/components/AddAudioRec.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport MicRecorder from 'mic-recorder-to-mp3'\nimport blobUrlFromId from './helpers/blobUrlFromId'\nimport audiosUrl from './helpers/audiosUrl'\nimport Tags from \"./Tags\";\n\n// there is no Axios.\n// Instead the audio notes are posted by XMLHttpRequest\n\n\nexport default function AddAudioRec(props) {\n\n    const [title, setTitle] = useState('')\n    const [tags, setTags] = useState([])\n    const [isRecording, setIsRecording] = useState(false);\n    const [blobURL, setBlobUrl] = useState('');\n    const [isBlocked, setIsBlocked] = useState(false);\n    const [Mp3Recorder, setMp3Recorder] = useState(new MicRecorder({ bitRate: 128 }));\n    const [latestBlobID, setLatestBlobID] = useState('')\n\n\n    useEffect(() => {\n        const blobURLBackEnd = blobUrlFromId(latestBlobID);\n        setBlobUrl(blobURLBackEnd); //the backend will change the file to stream from the database\n    }, [latestBlobID, blobURL])\n\n    const handleSubmit = event => {\n        event.preventDefault()\n    }\n\n    let start = () => {\n        if (isBlocked) {\n            console.log('Permission Denied');\n        } else {\n            Mp3Recorder\n                .start()\n                .then(() => {\n                    setIsRecording(true);\n                }).catch((e) => console.error(e));\n        }\n    };\n\n    // this will send the mp3 blob to the backend using:\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n    // https://developer.mozilla.org/en-US/docs/Web/API/FormData/Using_FormData_Objects\n    let upload = (blob) => {\n        var xhr = new XMLHttpRequest();\n\n        (xhr.onload) = (e) => { // todo to arrow func\n            if (this.readyState === 4) {\n                const resp = JSON.parse(e.target.responseText)\n                setLatestBlobID(resp._id);\n\n                setTitle('');\n                setSelectedTags([]);\n                props.getAllAudios();\n            }\n        }\n\n        var fd = new FormData();\n        fd.append(\"data\", blob);\n        fd.append(\"title\", title);\n        fd.append(\"tags\", selectedTags);\n\n        xhr.open(\"POST\", audiosUrl(), true);\n        const storedToken = localStorage.getItem('authToken')\n        xhr.setRequestHeader('Authorization', 'Bearer ' + storedToken);\n        xhr.send(fd);\n    }\n\n    let stop = (shouldPostNote) => {\n        Mp3Recorder\n            .stop()\n            .getMp3()\n            .then(([buffer, blob]) => {\n                if (shouldPostNote) {\n                    upload(blob);\n                } else {\n                    console.log(\"Discarding note\")\n                }\n                setIsRecording(false);\n                setIsBlocked(false);\n\n                console.log('blobURL' + blobURL);\n            }).catch((e) => console.error(e));\n    }\n\n    return (\n        <div className=\"Audios\">\n            <h1>Save an audio</h1>\n            <form onSubmit={handleSubmit}>\n                <h2>Title</h2>\n                <input\n                    type=\"text\"\n                    value={title}\n                    onChange={event => setTitle(event.target.value)}\n                />\n\n                <h2>Record an audio</h2>\n                <button onClick={start} disabled={isRecording}>Record</button>\n                <button onClick={() => stop(true)} disabled={!isRecording}>Save</button>\n                <button onClick={() => stop(false)} disabled={!isRecording}>Cancel</button>\n\n                <h2>Tags</h2>\n                <Tags\n                    tags={tags}\n                    setTags={setTags}\n                />\n\n                <button type=\"submit\">Save this audio ➕</button>\n            </form>\n\n        </div>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}