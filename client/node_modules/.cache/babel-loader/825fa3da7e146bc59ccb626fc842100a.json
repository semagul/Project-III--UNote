{"ast":null,"code":"var _jsxFileName = \"/Users/sema/UNote/client/src/components/AudioCard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport packageJson from '../../package.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AudioCard(_ref) {\n  let {\n    title,\n    _id,\n    blobURL,\n    tags,\n    createdAt\n  } = _ref;\n  const formattedDate = new Date(createdAt).toDateString();\n  const storedToken = localStorage.getItem('authToken');\n\n  let streamWithAuth = audio_id => {\n    const blobURL = `${packageJson.proxy}/api/bloburl/${audio_id}`;\n    console.log(\" Attempt to stream from\");\n    console.log(blobURL); // create context\n\n    let audioCtx = new (window.AudioContext || window.webkitAudioContext)(); // create source\n\n    let source = audioCtx.createBufferSource(); // route source\n\n    source.connect(audioCtx.destination); // prepare request\n\n    let request = new XMLHttpRequest();\n    request.open('GET', blobURL, true\n    /* async */\n    );\n    request.responseType = 'arraybuffer';\n\n    request.onload = function () {\n      // on load callback\n      // get audio data\n      let audioData = request.response; // try to decode audio data\n\n      audioCtx.decodeAudioData(audioData, function (buffer) {\n        // on success callback\n        console.log(\"Successfully decoded\"); // set source\n\n        source.buffer = buffer; // .. do whatever you want with the source\n        // e.g. play it\n\n        source.start(0); // or stop\n        // source.stop();\n      }, function (e) {\n        // on error callback\n        console.log(\"An error occurred\");\n        console.log(e);\n      });\n    };\n\n    request.setRequestHeader(\"Authorization\", `Bearer ${storedToken}`);\n    request.send();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/bloburl/${_id}`,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => streamWithAuth(_id),\n      children: \" play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), tags.map((el, i) => i === tags.length - 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: el\n    }, el, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 41\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [el, \", \"]\n    }, el, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 70\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created: \", formattedDate, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_c = AudioCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioCard\");","map":{"version":3,"names":["React","Link","packageJson","AudioCard","title","_id","blobURL","tags","createdAt","formattedDate","Date","toDateString","storedToken","localStorage","getItem","streamWithAuth","audio_id","proxy","console","log","audioCtx","window","AudioContext","webkitAudioContext","source","createBufferSource","connect","destination","request","XMLHttpRequest","open","responseType","onload","audioData","response","decodeAudioData","buffer","start","e","setRequestHeader","send","map","el","i","length"],"sources":["/Users/sema/UNote/client/src/components/AudioCard.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport packageJson from '../../package.json';\n\nexport default function AudioCard({ title, _id, blobURL, tags, createdAt }) {\n    const formattedDate = new Date(createdAt).toDateString();\n    const storedToken = localStorage.getItem('authToken');\n\n\n\tlet streamWithAuth = (audio_id) => {\n\t\tconst blobURL =            `${packageJson.proxy}/api/bloburl/${audio_id}`;\n\n\t\tconsole.log(\" Attempt to stream from\");\n\t\tconsole.log(blobURL);\n\n// create context\nlet audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n\n// create source\nlet source = audioCtx.createBufferSource();\n\n// route source\nsource.connect(audioCtx.destination);\n\n// prepare request\nlet request = new XMLHttpRequest();\nrequest.open('GET', blobURL, true /* async */ );\nrequest.responseType = 'arraybuffer';\n\nrequest.onload = function () {\n// on load callback\n\n// get audio data\nlet audioData = request.response;\n\n// try to decode audio data\naudioCtx.decodeAudioData(audioData,\n\t\tfunction (buffer) {\n\t\t\t\t// on success callback\n\t\t\t\tconsole.log(\"Successfully decoded\");\n\n\t\t\t\t// set source\n\t\t\t\tsource.buffer = buffer;\n\n\t\t\t\t// .. do whatever you want with the source\n\t\t\t\t// e.g. play it\n\t\t\t\tsource.start(0);\n\t\t\t\t// or stop\n\t\t\t\t// source.stop();\n\t\t},\n\t\tfunction (e) {\n\t\t\t\t// on error callback\n\t\t\t\tconsole.log(\"An error occurred\");\n\t\t\t\tconsole.log(e);\n\t\t});\n};\nrequest.setRequestHeader(\"Authorization\", `Bearer ${storedToken}`);\nrequest.send();\n}\n\n    return (\n        <div>\n            <Link to={`/bloburl/${_id}`}>\n                <h3>{title}</h3>\n            </Link>\n\n            {/* <audio src={`${process.env.REACT_APP_BLOB_URL}/${_id}`} controls=\"controls\" /> */}\n            <button onClick={() => streamWithAuth(_id)}> play</button> \n\n            {tags.map((el, i) => (\n                i === tags.length - 1 ? <span key={el}>{el}</span> : <span key={el}>{el}, </span>\n            ))}\n\n            <p>Created: {formattedDate} </p>\n\n        </div>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;AAEA,eAAe,SAASC,SAAT,OAA6D;EAAA,IAA1C;IAAEC,KAAF;IAASC,GAAT;IAAcC,OAAd;IAAuBC,IAAvB;IAA6BC;EAA7B,CAA0C;EACxE,MAAMC,aAAa,GAAG,IAAIC,IAAJ,CAASF,SAAT,EAAoBG,YAApB,EAAtB;EACA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAApB;;EAGH,IAAIC,cAAc,GAAIC,QAAD,IAAc;IAClC,MAAMV,OAAO,GAAe,GAAEJ,WAAW,CAACe,KAAM,gBAAeD,QAAS,EAAxE;IAEAE,OAAO,CAACC,GAAR,CAAY,yBAAZ;IACAD,OAAO,CAACC,GAAR,CAAYb,OAAZ,EAJkC,CAMpC;;IACA,IAAIc,QAAQ,GAAG,KAAKC,MAAM,CAACC,YAAP,IAAuBD,MAAM,CAACE,kBAAnC,GAAf,CAPoC,CASpC;;IACA,IAAIC,MAAM,GAAGJ,QAAQ,CAACK,kBAAT,EAAb,CAVoC,CAYpC;;IACAD,MAAM,CAACE,OAAP,CAAeN,QAAQ,CAACO,WAAxB,EAboC,CAepC;;IACA,IAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;IACAD,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoBxB,OAApB,EAA6B;IAAK;IAAlC;IACAsB,OAAO,CAACG,YAAR,GAAuB,aAAvB;;IAEAH,OAAO,CAACI,MAAR,GAAiB,YAAY;MAC7B;MAEA;MACA,IAAIC,SAAS,GAAGL,OAAO,CAACM,QAAxB,CAJ6B,CAM7B;;MACAd,QAAQ,CAACe,eAAT,CAAyBF,SAAzB,EACE,UAAUG,MAAV,EAAkB;QAChB;QACAlB,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAFgB,CAIhB;;QACAK,MAAM,CAACY,MAAP,GAAgBA,MAAhB,CALgB,CAOhB;QACA;;QACAZ,MAAM,CAACa,KAAP,CAAa,CAAb,EATgB,CAUhB;QACA;MACD,CAbH,EAcE,UAAUC,CAAV,EAAa;QACX;QACApB,OAAO,CAACC,GAAR,CAAY,mBAAZ;QACAD,OAAO,CAACC,GAAR,CAAYmB,CAAZ;MACD,CAlBH;IAmBC,CA1BD;;IA2BAV,OAAO,CAACW,gBAAR,CAAyB,eAAzB,EAA2C,UAAS3B,WAAY,EAAhE;IACAgB,OAAO,CAACY,IAAR;EACC,CAjDA;;EAmDG,oBACI;IAAA,wBACI,QAAC,IAAD;MAAM,EAAE,EAAG,YAAWnC,GAAI,EAA1B;MAAA,uBACI;QAAA,UAAKD;MAAL;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAMI;MAAQ,OAAO,EAAE,MAAMW,cAAc,CAACV,GAAD,CAArC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ,EAQKE,IAAI,CAACkC,GAAL,CAAS,CAACC,EAAD,EAAKC,CAAL,KACNA,CAAC,KAAKpC,IAAI,CAACqC,MAAL,GAAc,CAApB,gBAAwB;MAAA,UAAgBF;IAAhB,GAAWA,EAAX;MAAA;MAAA;MAAA;IAAA,QAAxB,gBAAqD;MAAA,WAAgBA,EAAhB;IAAA,GAAWA,EAAX;MAAA;MAAA;MAAA;IAAA,QADxD,CARL,eAYI;MAAA,wBAAajC,aAAb;IAAA;MAAA;MAAA;MAAA;IAAA,QAZJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH;KAzEuBN,S"},"metadata":{},"sourceType":"module"}