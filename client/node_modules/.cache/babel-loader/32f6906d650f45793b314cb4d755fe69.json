{"ast":null,"code":"var _jsxFileName = \"/Users/sema/UNote/client/src/components/AddNote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddNote(props) {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [tags, setTags] = useState(['']);\n  const [selectedTags, setSelectedTags] = useState([]);\n\n  const handleSubmit = event => {\n    // PREVENT refreshing the pagee \n    event.preventDefault(); // USING \"API\" here as you send to the backend\n\n    console.log(title, description, setTags);\n    axios.post('/api/notes', {\n      title,\n      description,\n      setTags\n    }).then(response => {\n      // console.log(\"response\")\n      // reset the form\n      setTitle('');\n      setDescription('');\n      setTags(['']); // refresh the list of projects in 'ProjectsList'\n\n      props.getAllNotes();\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    axios.get('/api/tags', {\n      tags\n    }).then(response => {\n      // console.log(response.data)\n      setTags(response.data);\n    }).catch(err => console.log(err));\n  }, [taa]);\n\n  let updateSelectedTags = event => {\n    let options = event.target.options;\n    let arr = [];\n\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].selected) {\n        arr.push(options[i].value);\n      }\n    }\n\n    setSelectedTags(arr);\n    console.log(selectedTags);\n  }; // arr.push(event.target.value)\n  // console.log(arr)\n  // \n  // console.log(newTag)\n  // let copySelectedTags = [...selectedTags];\n  // copySelectedTags.push(newTag);\n  // setSelectedTags(copySelectedTags)  \n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add a Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: event => setDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"tags\",\n        multiple: true,\n        onChange: event => updateSelectedTags(event),\n        children: tags === null || tags === void 0 ? void 0 : tags.map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: tag,\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add this Note \\u2795\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddNote, \"dH6/wgWkoH+ZO1hJNNN29sPxbD8=\");\n\n_c = AddNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNote\");","map":{"version":3,"names":["React","useEffect","useState","axios","AddNote","props","title","setTitle","description","setDescription","tags","setTags","selectedTags","setSelectedTags","handleSubmit","event","preventDefault","console","log","post","then","response","getAllNotes","catch","err","get","data","taa","updateSelectedTags","options","target","arr","i","length","selected","push","value","map","tag"],"sources":["/Users/sema/UNote/client/src/components/AddNote.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport axios from \"axios\"\n\nexport default function AddNote(props) {\n\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [tags, setTags] = useState([''])\n    const [selectedTags, setSelectedTags] = useState([])\n\n    const handleSubmit = event => {\n        // PREVENT refreshing the pagee \n        event.preventDefault()\n        // USING \"API\" here as you send to the backend\n        console.log(title, description, setTags)\n        axios.post('/api/notes', { title, description, setTags })\n            .then(response => {\n                // console.log(\"response\")\n                // reset the form\n                setTitle('')\n                setDescription('')\n                setTags([''])\n                // refresh the list of projects in 'ProjectsList'\n                props.getAllNotes()\n            })\n            .catch(err => console.log(err))\n    }\n\n    useEffect(() => {\n        axios.get('/api/tags', { tags })\n            .then(response => {\n               // console.log(response.data)\n                setTags(response.data)\n                \n            })\n            .catch(err => console.log(err))\n    }, [taa])\n\n    let updateSelectedTags  =  (event) => {\n        let options = event.target.options;\n        let arr = []\n        for (let i = 0; i < options.length; i++) {\n            if (options[i].selected) {\n                arr.push(options[i].value)\n            }\n        }\n     setSelectedTags(arr)\n        console.log(selectedTags)\n    }\n        // arr.push(event.target.value)\n        // console.log(arr)\n        // \n        \n        // console.log(newTag)\n        // let copySelectedTags = [...selectedTags];\n        // copySelectedTags.push(newTag);\n        // setSelectedTags(copySelectedTags)  \n   \n\n    return (\n        <>\n            <h1>Add a Note</h1>\n            <form onSubmit={ handleSubmit }>\n                <h2>Title</h2>\n                <input\n                    type=\"text\"\n                    value={title}\n                    onChange={event => setTitle(event.target.value)}\n                />\n\n                <h2>Description</h2>\n                <input\n                    type=\"text\"\n                    value={description}\n                    onChange={event => setDescription(event.target.value)}\n                />\n\n                <h2>Tags</h2>\n                <select name=\"tags\" multiple \n                onChange={event => updateSelectedTags(event)}>\n                {tags?.map((tag) => <option key={tag} value={tag}>{tag}</option>)}\n                \n                </select> \n                <button type=\"submit\">Add this Note âž•</button>\n            </form>\n            \n        </>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}